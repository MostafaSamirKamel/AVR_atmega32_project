
LED and BUTTON and BUZZER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000042a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000042a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000045c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001003  00000000  00000000  000005b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007cb  00000000  00000000  000015bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008fb  00000000  00000000  00001d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00002684  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000621  00000000  00000000  0000286c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b2f  00000000  00000000  00002e8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  000039bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

//U4

int main(void)
{
	BUTTON_voidInit_button_pullup_Pin(PORTC,PIN2);
  6c:	62 e0       	ldi	r22, 0x02	; 2
  6e:	82 e0       	ldi	r24, 0x02	; 2
  70:	0e 94 59 00 	call	0xb2	; 0xb2 <BUTTON_voidInit_button_pullup_Pin>
	LED_voidInit_Led_Pin(PORTC,PIN3);
  74:	63 e0       	ldi	r22, 0x03	; 3
  76:	82 e0       	ldi	r24, 0x02	; 2
  78:	0e 94 6c 00 	call	0xd8	; 0xd8 <LED_voidInit_Led_Pin>
	
	
	u8 button_val;
	u8 button_prev = 0;
  7c:	c0 e0       	ldi	r28, 0x00	; 0
  7e:	01 c0       	rjmp	.+2      	; 0x82 <main+0x16>
			LED_voidToggle_Led_Pin(PORTC,PIN3);
			button_prev = 1;
		}
		else if (button_val == 0)
		{
			button_prev = 0;
  80:	c0 e0       	ldi	r28, 0x00	; 0
	u8 button_val;
	u8 button_prev = 0;
	
	while (1)
	{
		button_val = BUTTON_u8Get_button_Pin(PORTC,PIN2);
  82:	62 e0       	ldi	r22, 0x02	; 2
  84:	82 e0       	ldi	r24, 0x02	; 2
  86:	0e 94 52 00 	call	0xa4	; 0xa4 <BUTTON_u8Get_button_Pin>
		
		if((button_val == 0) && (button_prev ==0))
  8a:	81 11       	cpse	r24, r1
  8c:	08 c0       	rjmp	.+16     	; 0x9e <main+0x32>
  8e:	c1 11       	cpse	r28, r1
  90:	06 c0       	rjmp	.+12     	; 0x9e <main+0x32>
		{
			LED_voidToggle_Led_Pin(PORTC,PIN3);
  92:	63 e0       	ldi	r22, 0x03	; 3
  94:	82 e0       	ldi	r24, 0x02	; 2
  96:	0e 94 74 00 	call	0xe8	; 0xe8 <LED_voidToggle_Led_Pin>
			button_prev = 1;
  9a:	c1 e0       	ldi	r28, 0x01	; 1
  9c:	f2 cf       	rjmp	.-28     	; 0x82 <main+0x16>
		}
		else if (button_val == 0)
  9e:	88 23       	and	r24, r24
  a0:	79 f3       	breq	.-34     	; 0x80 <main+0x14>
  a2:	ef cf       	rjmp	.-34     	; 0x82 <main+0x16>

000000a4 <BUTTON_u8Get_button_Pin>:
	}
	else
	{
		Local_u8Variable = DIO_u8GetPortValue (Copy_u8PortNumber );
	}
}
  a4:	84 30       	cpi	r24, 0x04	; 4
  a6:	20 f4       	brcc	.+8      	; 0xb0 <BUTTON_u8Get_button_Pin+0xc>
  a8:	68 30       	cpi	r22, 0x08	; 8
  aa:	10 f4       	brcc	.+4      	; 0xb0 <BUTTON_u8Get_button_Pin+0xc>
  ac:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_u8GetPinValue>
  b0:	08 95       	ret

000000b2 <BUTTON_voidInit_button_pullup_Pin>:


void BUTTON_voidInit_button_pullup_Pin ( u8 Copy_u8PortNumber, u8 Copy_u8PinNumber )
{
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
	/* i/p validation */
	if ( Copy_u8PortNumber > PORTD  || Copy_u8PinNumber > PIN7 )
  b6:	84 30       	cpi	r24, 0x04	; 4
  b8:	60 f4       	brcc	.+24     	; 0xd2 <BUTTON_voidInit_button_pullup_Pin+0x20>
  ba:	68 30       	cpi	r22, 0x08	; 8
  bc:	50 f4       	brcc	.+20     	; 0xd2 <BUTTON_voidInit_button_pullup_Pin+0x20>
  be:	d6 2f       	mov	r29, r22
  c0:	c8 2f       	mov	r28, r24
	{
		// Do Nothing
	}
	else
	{
		DIO_voidSetPinDirection (Copy_u8PortNumber,Copy_u8PinNumber,INPUT);
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	0e 94 7b 00 	call	0xf6	; 0xf6 <DIO_voidSetPinDirection>
		DIO_voidConfig_Pull_Up_Pin(Copy_u8PortNumber,Copy_u8PinNumber,ON);
  c8:	41 e0       	ldi	r20, 0x01	; 1
  ca:	6d 2f       	mov	r22, r29
  cc:	8c 2f       	mov	r24, r28
  ce:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DIO_voidConfig_Pull_Up_Pin>
	}
  d2:	df 91       	pop	r29
  d4:	cf 91       	pop	r28
  d6:	08 95       	ret

000000d8 <LED_voidInit_Led_Pin>:
    else
    {
        switch(Copy_u8Status)
        {
            case ON  :   DIO_voidSetPortValue ( Copy_u8PortNumber, HIGH );     break;
            case OFF :   DIO_voidSetPortValue ( Copy_u8PortNumber, LOW  );     break;
  d8:	84 30       	cpi	r24, 0x04	; 4
  da:	28 f4       	brcc	.+10     	; 0xe6 <LED_voidInit_Led_Pin+0xe>
  dc:	68 30       	cpi	r22, 0x08	; 8
  de:	18 f4       	brcc	.+6      	; 0xe6 <LED_voidInit_Led_Pin+0xe>
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	0e 94 7b 00 	call	0xf6	; 0xf6 <DIO_voidSetPinDirection>
  e6:	08 95       	ret

000000e8 <LED_voidToggle_Led_Pin>:
/* Fun. Return : void                                                                 */
/**************************************************************************************/
void LED_voidToggle_Led_Pin ( u8 Copy_u8PortNumber, u8 Copy_u8PinNumber )
{
    /* i/p validation */
    if ( Copy_u8PortNumber > PORTD  || Copy_u8PinNumber > PIN7 )
  e8:	84 30       	cpi	r24, 0x04	; 4
  ea:	20 f4       	brcc	.+8      	; 0xf4 <LED_voidToggle_Led_Pin+0xc>
  ec:	68 30       	cpi	r22, 0x08	; 8
  ee:	10 f4       	brcc	.+4      	; 0xf4 <LED_voidToggle_Led_Pin+0xc>
    {
        // Do Nothing
    }
    else
    {
        DIO_voidTogglePinValue ( Copy_u8PortNumber, Copy_u8PinNumber );
  f0:	0e 94 a2 01 	call	0x344	; 0x344 <DIO_voidTogglePinValue>
  f4:	08 95       	ret

000000f6 <DIO_voidSetPinDirection>:
        switch(Copy_u8PortNumber)
        {
            case PORTA :    PORTA_REG ^= 0xff ;     break;           
            case PORTB :    PORTB_REG ^= 0xff ;     break;          
            case PORTC :    PORTC_REG ^= 0xff ;     break; 
            case PORTD :    PORTD_REG ^= 0xff ;     break; 
  f6:	84 30       	cpi	r24, 0x04	; 4
  f8:	08 f0       	brcs	.+2      	; 0xfc <DIO_voidSetPinDirection+0x6>
  fa:	73 c0       	rjmp	.+230    	; 0x1e2 <DIO_voidSetPinDirection+0xec>
  fc:	68 30       	cpi	r22, 0x08	; 8
  fe:	08 f0       	brcs	.+2      	; 0x102 <DIO_voidSetPinDirection+0xc>
 100:	70 c0       	rjmp	.+224    	; 0x1e2 <DIO_voidSetPinDirection+0xec>
 102:	44 23       	and	r20, r20
 104:	19 f0       	breq	.+6      	; 0x10c <DIO_voidSetPinDirection+0x16>
 106:	41 30       	cpi	r20, 0x01	; 1
 108:	c9 f1       	breq	.+114    	; 0x17c <DIO_voidSetPinDirection+0x86>
 10a:	08 95       	ret
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	91 f0       	breq	.+36     	; 0x134 <DIO_voidSetPinDirection+0x3e>
 110:	28 f0       	brcs	.+10     	; 0x11c <DIO_voidSetPinDirection+0x26>
 112:	82 30       	cpi	r24, 0x02	; 2
 114:	d9 f0       	breq	.+54     	; 0x14c <DIO_voidSetPinDirection+0x56>
 116:	83 30       	cpi	r24, 0x03	; 3
 118:	29 f1       	breq	.+74     	; 0x164 <DIO_voidSetPinDirection+0x6e>
 11a:	08 95       	ret
 11c:	2a b3       	in	r18, 0x1a	; 26
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_voidSetPinDirection+0x32>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_voidSetPinDirection+0x2e>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	8a bb       	out	0x1a, r24	; 26
 132:	08 95       	ret
 134:	27 b3       	in	r18, 0x17	; 23
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_voidSetPinDirection+0x4a>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_voidSetPinDirection+0x46>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	87 bb       	out	0x17, r24	; 23
 14a:	08 95       	ret
 14c:	24 b3       	in	r18, 0x14	; 20
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_voidSetPinDirection+0x62>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_voidSetPinDirection+0x5e>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	84 bb       	out	0x14, r24	; 20
 162:	08 95       	ret
 164:	21 b3       	in	r18, 0x11	; 17
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_voidSetPinDirection+0x7a>
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	6a 95       	dec	r22
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_voidSetPinDirection+0x76>
 174:	80 95       	com	r24
 176:	82 23       	and	r24, r18
 178:	81 bb       	out	0x11, r24	; 17
 17a:	08 95       	ret
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	89 f0       	breq	.+34     	; 0x1a2 <DIO_voidSetPinDirection+0xac>
 180:	28 f0       	brcs	.+10     	; 0x18c <DIO_voidSetPinDirection+0x96>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	c9 f0       	breq	.+50     	; 0x1b8 <DIO_voidSetPinDirection+0xc2>
 186:	83 30       	cpi	r24, 0x03	; 3
 188:	11 f1       	breq	.+68     	; 0x1ce <DIO_voidSetPinDirection+0xd8>
 18a:	08 95       	ret
 18c:	2a b3       	in	r18, 0x1a	; 26
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_voidSetPinDirection+0xa2>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_voidSetPinDirection+0x9e>
 19c:	82 2b       	or	r24, r18
 19e:	8a bb       	out	0x1a, r24	; 26
 1a0:	08 95       	ret
 1a2:	27 b3       	in	r18, 0x17	; 23
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_voidSetPinDirection+0xb8>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_voidSetPinDirection+0xb4>
 1b2:	82 2b       	or	r24, r18
 1b4:	87 bb       	out	0x17, r24	; 23
 1b6:	08 95       	ret
 1b8:	24 b3       	in	r18, 0x14	; 20
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_voidSetPinDirection+0xce>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_voidSetPinDirection+0xca>
 1c8:	82 2b       	or	r24, r18
 1ca:	84 bb       	out	0x14, r24	; 20
 1cc:	08 95       	ret
 1ce:	21 b3       	in	r18, 0x11	; 17
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_voidSetPinDirection+0xe4>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_voidSetPinDirection+0xe0>
 1de:	82 2b       	or	r24, r18
 1e0:	81 bb       	out	0x11, r24	; 17
 1e2:	08 95       	ret

000001e4 <DIO_voidSetPinValue>:
 1e4:	84 30       	cpi	r24, 0x04	; 4
 1e6:	08 f0       	brcs	.+2      	; 0x1ea <DIO_voidSetPinValue+0x6>
 1e8:	73 c0       	rjmp	.+230    	; 0x2d0 <DIO_voidSetPinValue+0xec>
 1ea:	68 30       	cpi	r22, 0x08	; 8
 1ec:	08 f0       	brcs	.+2      	; 0x1f0 <DIO_voidSetPinValue+0xc>
 1ee:	70 c0       	rjmp	.+224    	; 0x2d0 <DIO_voidSetPinValue+0xec>
 1f0:	44 23       	and	r20, r20
 1f2:	19 f0       	breq	.+6      	; 0x1fa <DIO_voidSetPinValue+0x16>
 1f4:	41 30       	cpi	r20, 0x01	; 1
 1f6:	c9 f1       	breq	.+114    	; 0x26a <DIO_voidSetPinValue+0x86>
 1f8:	08 95       	ret
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	91 f0       	breq	.+36     	; 0x222 <DIO_voidSetPinValue+0x3e>
 1fe:	28 f0       	brcs	.+10     	; 0x20a <DIO_voidSetPinValue+0x26>
 200:	82 30       	cpi	r24, 0x02	; 2
 202:	d9 f0       	breq	.+54     	; 0x23a <DIO_voidSetPinValue+0x56>
 204:	83 30       	cpi	r24, 0x03	; 3
 206:	29 f1       	breq	.+74     	; 0x252 <DIO_voidSetPinValue+0x6e>
 208:	08 95       	ret
 20a:	2b b3       	in	r18, 0x1b	; 27
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_voidSetPinValue+0x32>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_voidSetPinValue+0x2e>
 21a:	80 95       	com	r24
 21c:	82 23       	and	r24, r18
 21e:	8b bb       	out	0x1b, r24	; 27
 220:	08 95       	ret
 222:	28 b3       	in	r18, 0x18	; 24
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_voidSetPinValue+0x4a>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_voidSetPinValue+0x46>
 232:	80 95       	com	r24
 234:	82 23       	and	r24, r18
 236:	88 bb       	out	0x18, r24	; 24
 238:	08 95       	ret
 23a:	25 b3       	in	r18, 0x15	; 21
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_voidSetPinValue+0x62>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	6a 95       	dec	r22
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_voidSetPinValue+0x5e>
 24a:	80 95       	com	r24
 24c:	82 23       	and	r24, r18
 24e:	85 bb       	out	0x15, r24	; 21
 250:	08 95       	ret
 252:	22 b3       	in	r18, 0x12	; 18
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_voidSetPinValue+0x7a>
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_voidSetPinValue+0x76>
 262:	80 95       	com	r24
 264:	82 23       	and	r24, r18
 266:	82 bb       	out	0x12, r24	; 18
 268:	08 95       	ret
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	89 f0       	breq	.+34     	; 0x290 <DIO_voidSetPinValue+0xac>
 26e:	28 f0       	brcs	.+10     	; 0x27a <DIO_voidSetPinValue+0x96>
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	c9 f0       	breq	.+50     	; 0x2a6 <DIO_voidSetPinValue+0xc2>
 274:	83 30       	cpi	r24, 0x03	; 3
 276:	11 f1       	breq	.+68     	; 0x2bc <DIO_voidSetPinValue+0xd8>
 278:	08 95       	ret
 27a:	2b b3       	in	r18, 0x1b	; 27
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 c0       	rjmp	.+4      	; 0x286 <DIO_voidSetPinValue+0xa2>
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	6a 95       	dec	r22
 288:	e2 f7       	brpl	.-8      	; 0x282 <DIO_voidSetPinValue+0x9e>
 28a:	82 2b       	or	r24, r18
 28c:	8b bb       	out	0x1b, r24	; 27
 28e:	08 95       	ret
 290:	28 b3       	in	r18, 0x18	; 24
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_voidSetPinValue+0xb8>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_voidSetPinValue+0xb4>
 2a0:	82 2b       	or	r24, r18
 2a2:	88 bb       	out	0x18, r24	; 24
 2a4:	08 95       	ret
 2a6:	25 b3       	in	r18, 0x15	; 21
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_voidSetPinValue+0xce>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_voidSetPinValue+0xca>
 2b6:	82 2b       	or	r24, r18
 2b8:	85 bb       	out	0x15, r24	; 21
 2ba:	08 95       	ret
 2bc:	22 b3       	in	r18, 0x12	; 18
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_voidSetPinValue+0xe4>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_voidSetPinValue+0xe0>
 2cc:	82 2b       	or	r24, r18
 2ce:	82 bb       	out	0x12, r24	; 18
 2d0:	08 95       	ret

000002d2 <DIO_u8GetPinValue>:
 2d2:	84 30       	cpi	r24, 0x04	; 4
 2d4:	a8 f5       	brcc	.+106    	; 0x340 <DIO_u8GetPinValue+0x6e>
 2d6:	68 30       	cpi	r22, 0x08	; 8
 2d8:	98 f5       	brcc	.+102    	; 0x340 <DIO_u8GetPinValue+0x6e>
 2da:	81 30       	cpi	r24, 0x01	; 1
 2dc:	89 f0       	breq	.+34     	; 0x300 <DIO_u8GetPinValue+0x2e>
 2de:	28 f0       	brcs	.+10     	; 0x2ea <DIO_u8GetPinValue+0x18>
 2e0:	82 30       	cpi	r24, 0x02	; 2
 2e2:	c9 f0       	breq	.+50     	; 0x316 <DIO_u8GetPinValue+0x44>
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	11 f1       	breq	.+68     	; 0x32c <DIO_u8GetPinValue+0x5a>
 2e8:	2b c0       	rjmp	.+86     	; 0x340 <DIO_u8GetPinValue+0x6e>
 2ea:	29 b3       	in	r18, 0x19	; 25
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_u8GetPinValue+0x24>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_u8GetPinValue+0x20>
 2fa:	92 2f       	mov	r25, r18
 2fc:	98 23       	and	r25, r24
 2fe:	20 c0       	rjmp	.+64     	; 0x340 <DIO_u8GetPinValue+0x6e>
 300:	26 b3       	in	r18, 0x16	; 22
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	02 c0       	rjmp	.+4      	; 0x30c <DIO_u8GetPinValue+0x3a>
 308:	88 0f       	add	r24, r24
 30a:	99 1f       	adc	r25, r25
 30c:	6a 95       	dec	r22
 30e:	e2 f7       	brpl	.-8      	; 0x308 <DIO_u8GetPinValue+0x36>
 310:	92 2f       	mov	r25, r18
 312:	98 23       	and	r25, r24
 314:	15 c0       	rjmp	.+42     	; 0x340 <DIO_u8GetPinValue+0x6e>
 316:	23 b3       	in	r18, 0x13	; 19
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DIO_u8GetPinValue+0x50>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	6a 95       	dec	r22
 324:	e2 f7       	brpl	.-8      	; 0x31e <DIO_u8GetPinValue+0x4c>
 326:	92 2f       	mov	r25, r18
 328:	98 23       	and	r25, r24
 32a:	0a c0       	rjmp	.+20     	; 0x340 <DIO_u8GetPinValue+0x6e>
 32c:	20 b3       	in	r18, 0x10	; 16
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_u8GetPinValue+0x66>
 334:	88 0f       	add	r24, r24
 336:	99 1f       	adc	r25, r25
 338:	6a 95       	dec	r22
 33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_u8GetPinValue+0x62>
 33c:	92 2f       	mov	r25, r18
 33e:	98 23       	and	r25, r24
 340:	89 2f       	mov	r24, r25
 342:	08 95       	ret

00000344 <DIO_voidTogglePinValue>:
 344:	84 30       	cpi	r24, 0x04	; 4
 346:	a8 f5       	brcc	.+106    	; 0x3b2 <DIO_voidTogglePinValue+0x6e>
 348:	68 30       	cpi	r22, 0x08	; 8
 34a:	98 f5       	brcc	.+102    	; 0x3b2 <DIO_voidTogglePinValue+0x6e>
 34c:	81 30       	cpi	r24, 0x01	; 1
 34e:	89 f0       	breq	.+34     	; 0x372 <DIO_voidTogglePinValue+0x2e>
 350:	28 f0       	brcs	.+10     	; 0x35c <DIO_voidTogglePinValue+0x18>
 352:	82 30       	cpi	r24, 0x02	; 2
 354:	c9 f0       	breq	.+50     	; 0x388 <DIO_voidTogglePinValue+0x44>
 356:	83 30       	cpi	r24, 0x03	; 3
 358:	11 f1       	breq	.+68     	; 0x39e <DIO_voidTogglePinValue+0x5a>
 35a:	08 95       	ret
 35c:	2b b3       	in	r18, 0x1b	; 27
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	02 c0       	rjmp	.+4      	; 0x368 <DIO_voidTogglePinValue+0x24>
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	6a 95       	dec	r22
 36a:	e2 f7       	brpl	.-8      	; 0x364 <DIO_voidTogglePinValue+0x20>
 36c:	82 27       	eor	r24, r18
 36e:	8b bb       	out	0x1b, r24	; 27
 370:	08 95       	ret
 372:	28 b3       	in	r18, 0x18	; 24
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	02 c0       	rjmp	.+4      	; 0x37e <DIO_voidTogglePinValue+0x3a>
 37a:	88 0f       	add	r24, r24
 37c:	99 1f       	adc	r25, r25
 37e:	6a 95       	dec	r22
 380:	e2 f7       	brpl	.-8      	; 0x37a <DIO_voidTogglePinValue+0x36>
 382:	82 27       	eor	r24, r18
 384:	88 bb       	out	0x18, r24	; 24
 386:	08 95       	ret
 388:	25 b3       	in	r18, 0x15	; 21
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	02 c0       	rjmp	.+4      	; 0x394 <DIO_voidTogglePinValue+0x50>
 390:	88 0f       	add	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	6a 95       	dec	r22
 396:	e2 f7       	brpl	.-8      	; 0x390 <DIO_voidTogglePinValue+0x4c>
 398:	82 27       	eor	r24, r18
 39a:	85 bb       	out	0x15, r24	; 21
 39c:	08 95       	ret
 39e:	22 b3       	in	r18, 0x12	; 18
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_voidTogglePinValue+0x66>
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	6a 95       	dec	r22
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_voidTogglePinValue+0x62>
 3ae:	82 27       	eor	r24, r18
 3b0:	82 bb       	out	0x12, r24	; 18
 3b2:	08 95       	ret

000003b4 <DIO_voidConfig_Pull_Up_Pin>:
/* Fun. Return : void                                                                              */
/***************************************************************************************************/
void DIO_voidConfig_Pull_Up_Pin (u8 Copy_u8PortNumber, u8 Copy_u8PinNumber , u8 Copy_u8PullUpStatus )
{
    /* i/p validation */
    if ( Copy_u8PortNumber > PORTD || Copy_u8PinNumber > PIN7 )
 3b4:	84 30       	cpi	r24, 0x04	; 4
 3b6:	60 f4       	brcc	.+24     	; 0x3d0 <DIO_voidConfig_Pull_Up_Pin+0x1c>
 3b8:	68 30       	cpi	r22, 0x08	; 8
 3ba:	50 f4       	brcc	.+20     	; 0x3d0 <DIO_voidConfig_Pull_Up_Pin+0x1c>
    {
        // Do Nothing
    }
    else
    {
       switch(Copy_u8PullUpStatus)
 3bc:	44 23       	and	r20, r20
 3be:	29 f0       	breq	.+10     	; 0x3ca <DIO_voidConfig_Pull_Up_Pin+0x16>
 3c0:	41 30       	cpi	r20, 0x01	; 1
 3c2:	31 f4       	brne	.+12     	; 0x3d0 <DIO_voidConfig_Pull_Up_Pin+0x1c>
       {
            case ON  :   DIO_voidSetPinValue (Copy_u8PortNumber,Copy_u8PinNumber, HIGH );   break;
 3c4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <DIO_voidSetPinValue>
 3c8:	08 95       	ret
            case OFF :   DIO_voidSetPinValue (Copy_u8PortNumber,Copy_u8PinNumber, LOW  );   break; 
 3ca:	40 e0       	ldi	r20, 0x00	; 0
 3cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <DIO_voidSetPinValue>
 3d0:	08 95       	ret

000003d2 <_exit>:
 3d2:	f8 94       	cli

000003d4 <__stop_program>:
 3d4:	ff cf       	rjmp	.-2      	; 0x3d4 <__stop_program>
