
SevenSegment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000408  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000408  0000047c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000049c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001060  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000884  00000000  00000000  00001680  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009d6  00000000  00000000  00001f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f8  00000000  00000000  000028dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000665  00000000  00000000  00002ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c59  00000000  00000000  00003139  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00003d92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e0       	ldi	r30, 0x08	; 8
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 02 02 	jmp	0x404	; 0x404 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
// U2

int main(void)
{
	
	SEGMENT_voidInitSegmentPort(PORTC);
  82:	82 e0       	ldi	r24, 0x02	; 2
  84:	0e 94 7b 00 	call	0xf6	; 0xf6 <SEGMENT_voidInitSegmentPort>
	BUTTON_voidInit_button_pullup_Pin(PORTD,PIN7);
  88:	67 e0       	ldi	r22, 0x07	; 7
  8a:	83 e0       	ldi	r24, 0x03	; 3
  8c:	0e 94 61 00 	call	0xc2	; 0xc2 <BUTTON_voidInit_button_pullup_Pin>

	u8 counter = 0;
  90:	c0 e0       	ldi	r28, 0x00	; 0
	u8 button_val;
	
	while (1)
	{
		button_val = BUTTON_u8Get_button_Pin(PORTD,PIN7);
  92:	67 e0       	ldi	r22, 0x07	; 7
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	0e 94 74 00 	call	0xe8	; 0xe8 <BUTTON_u8Get_button_Pin>
		
		if (button_val == 0)
  9a:	81 11       	cpse	r24, r1
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <main+0x1e>
		{
			counter++;
  9e:	cf 5f       	subi	r28, 0xFF	; 255
		}
		if (counter > 9)
  a0:	ca 30       	cpi	r28, 0x0A	; 10
  a2:	08 f0       	brcs	.+2      	; 0xa6 <main+0x24>
		{
			counter = 0;
  a4:	c0 e0       	ldi	r28, 0x00	; 0
		}
		SEGMENT_COMCATH_voidPrintNumber(PORTC,counter);
  a6:	6c 2f       	mov	r22, r28
  a8:	82 e0       	ldi	r24, 0x02	; 2
  aa:	0e 94 8f 00 	call	0x11e	; 0x11e <SEGMENT_COMCATH_voidPrintNumber>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	2f e7       	ldi	r18, 0x7F	; 127
  b0:	8a e1       	ldi	r24, 0x1A	; 26
  b2:	96 e0       	ldi	r25, 0x06	; 6
  b4:	21 50       	subi	r18, 0x01	; 1
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	90 40       	sbci	r25, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x32>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x3c>
  be:	00 00       	nop
  c0:	e8 cf       	rjmp	.-48     	; 0x92 <main+0x10>

000000c2 <BUTTON_voidInit_button_pullup_Pin>:
	{
		// Do Nothing
	}
	else
	{
		DIO_voidSetPortDirection ( Copy_u8PortNumber, INPUT );
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	84 30       	cpi	r24, 0x04	; 4
  c8:	60 f4       	brcc	.+24     	; 0xe2 <BUTTON_voidInit_button_pullup_Pin+0x20>
  ca:	68 30       	cpi	r22, 0x08	; 8
  cc:	50 f4       	brcc	.+20     	; 0xe2 <BUTTON_voidInit_button_pullup_Pin+0x20>
  ce:	d6 2f       	mov	r29, r22
  d0:	c8 2f       	mov	r28, r24
  d2:	40 e0       	ldi	r20, 0x00	; 0
  d4:	0e 94 ba 00 	call	0x174	; 0x174 <DIO_voidSetPinDirection>
  d8:	41 e0       	ldi	r20, 0x01	; 1
  da:	6d 2f       	mov	r22, r29
  dc:	8c 2f       	mov	r24, r28
  de:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <DIO_voidConfig_Pull_Up_Pin>
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <BUTTON_u8Get_button_Pin>:
{
	// local Variable
	 u8 Local_u8Variable;
	
	/* i/p validation */
	if ( Copy_u8PortNumber > PORTD  || Copy_u8PinNumber > PIN7 )
  e8:	84 30       	cpi	r24, 0x04	; 4
  ea:	20 f4       	brcc	.+8      	; 0xf4 <BUTTON_u8Get_button_Pin+0xc>
  ec:	68 30       	cpi	r22, 0x08	; 8
  ee:	10 f4       	brcc	.+4      	; 0xf4 <BUTTON_u8Get_button_Pin+0xc>
	{
		// Do Nothing
	}
	else
	{
		Local_u8Variable = DIO_u8GetPinValue(Copy_u8PortNumber,Copy_u8PinNumber);
  f0:	0e 94 ba 01 	call	0x374	; 0x374 <DIO_u8GetPinValue>
	}
}
  f4:	08 95       	ret

000000f6 <SEGMENT_voidInitSegmentPort>:



void SEGMENT_voidInitSegmentPort ( u8 Copy_u8PortNumber )
{
	switch(Copy_u8PortNumber)
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	49 f0       	breq	.+18     	; 0x10c <SEGMENT_voidInitSegmentPort+0x16>
  fa:	28 f0       	brcs	.+10     	; 0x106 <SEGMENT_voidInitSegmentPort+0x10>
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	49 f0       	breq	.+18     	; 0x112 <SEGMENT_voidInitSegmentPort+0x1c>
 100:	83 30       	cpi	r24, 0x03	; 3
 102:	51 f0       	breq	.+20     	; 0x118 <SEGMENT_voidInitSegmentPort+0x22>
 104:	08 95       	ret
	{
		case PORTA :    DDRA_REG = 0xff ;   break;
 106:	8f ef       	ldi	r24, 0xFF	; 255
 108:	8a bb       	out	0x1a, r24	; 26
 10a:	08 95       	ret
		case PORTB :    DDRB_REG = 0xff ;   break;
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	87 bb       	out	0x17, r24	; 23
 110:	08 95       	ret
		case PORTC :    DDRC_REG = 0xff ;   break;
 112:	8f ef       	ldi	r24, 0xFF	; 255
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
		case PORTD :    DDRD_REG = 0xff ;   break;
 118:	8f ef       	ldi	r24, 0xFF	; 255
 11a:	81 bb       	out	0x11, r24	; 17
 11c:	08 95       	ret

0000011e <SEGMENT_COMCATH_voidPrintNumber>:
		default    :                        break;
	}
}

void SEGMENT_COMCATH_voidPrintNumber ( u8 Copy_u8PortNumber , u8 Copy_u8Number )
{
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	60 97       	sbiw	r28, 0x10	; 16
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
	// Corrected values for Common Cathode 7-segment display
	u8 Arr[] = {
 132:	90 e1       	ldi	r25, 0x10	; 16
 134:	e0 e6       	ldi	r30, 0x60	; 96
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	de 01       	movw	r26, r28
 13a:	11 96       	adiw	r26, 0x01	; 1
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	9a 95       	dec	r25
 142:	e1 f7       	brne	.-8      	; 0x13c <SEGMENT_COMCATH_voidPrintNumber+0x1e>
		0x79, // E
		0x71  // F
	};

	// Prevent out-of-bounds memory access
	if (Copy_u8Number < 16)
 144:	60 31       	cpi	r22, 0x10	; 16
 146:	50 f4       	brcc	.+20     	; 0x15c <SEGMENT_COMCATH_voidPrintNumber+0x3e>
	{
		DIO_voidSetPortValue(Copy_u8PortNumber, Arr[Copy_u8Number]);
 148:	e1 e0       	ldi	r30, 0x01	; 1
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	ec 0f       	add	r30, r28
 14e:	fd 1f       	adc	r31, r29
 150:	e6 0f       	add	r30, r22
 152:	f1 1d       	adc	r31, r1
 154:	60 81       	ld	r22, Z
 156:	0e 94 a8 01 	call	0x350	; 0x350 <DIO_voidSetPortValue>
 15a:	03 c0       	rjmp	.+6      	; 0x162 <SEGMENT_COMCATH_voidPrintNumber+0x44>
	}
	else
	{
		DIO_voidSetPortValue(Copy_u8PortNumber, 0x00);
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	0e 94 a8 01 	call	0x350	; 0x350 <DIO_voidSetPortValue>
	}
}
 162:	60 96       	adiw	r28, 0x10	; 16
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	f8 94       	cli
 168:	de bf       	out	0x3e, r29	; 62
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	cd bf       	out	0x3d, r28	; 61
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <DIO_voidSetPinDirection>:
        switch(Copy_u8PortNumber)
        {
            case PORTA :    PORTA_REG ^= 0xff ;     break;           
            case PORTB :    PORTB_REG ^= 0xff ;     break;          
            case PORTC :    PORTC_REG ^= 0xff ;     break; 
            case PORTD :    PORTD_REG ^= 0xff ;     break; 
 174:	84 30       	cpi	r24, 0x04	; 4
 176:	08 f0       	brcs	.+2      	; 0x17a <DIO_voidSetPinDirection+0x6>
 178:	73 c0       	rjmp	.+230    	; 0x260 <DIO_voidSetPinDirection+0xec>
 17a:	68 30       	cpi	r22, 0x08	; 8
 17c:	08 f0       	brcs	.+2      	; 0x180 <DIO_voidSetPinDirection+0xc>
 17e:	70 c0       	rjmp	.+224    	; 0x260 <DIO_voidSetPinDirection+0xec>
 180:	44 23       	and	r20, r20
 182:	19 f0       	breq	.+6      	; 0x18a <DIO_voidSetPinDirection+0x16>
 184:	41 30       	cpi	r20, 0x01	; 1
 186:	c9 f1       	breq	.+114    	; 0x1fa <DIO_voidSetPinDirection+0x86>
 188:	08 95       	ret
 18a:	81 30       	cpi	r24, 0x01	; 1
 18c:	91 f0       	breq	.+36     	; 0x1b2 <DIO_voidSetPinDirection+0x3e>
 18e:	28 f0       	brcs	.+10     	; 0x19a <DIO_voidSetPinDirection+0x26>
 190:	82 30       	cpi	r24, 0x02	; 2
 192:	d9 f0       	breq	.+54     	; 0x1ca <DIO_voidSetPinDirection+0x56>
 194:	83 30       	cpi	r24, 0x03	; 3
 196:	29 f1       	breq	.+74     	; 0x1e2 <DIO_voidSetPinDirection+0x6e>
 198:	08 95       	ret
 19a:	2a b3       	in	r18, 0x1a	; 26
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <DIO_voidSetPinDirection+0x32>
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	6a 95       	dec	r22
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <DIO_voidSetPinDirection+0x2e>
 1aa:	80 95       	com	r24
 1ac:	82 23       	and	r24, r18
 1ae:	8a bb       	out	0x1a, r24	; 26
 1b0:	08 95       	ret
 1b2:	27 b3       	in	r18, 0x17	; 23
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <DIO_voidSetPinDirection+0x4a>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <DIO_voidSetPinDirection+0x46>
 1c2:	80 95       	com	r24
 1c4:	82 23       	and	r24, r18
 1c6:	87 bb       	out	0x17, r24	; 23
 1c8:	08 95       	ret
 1ca:	24 b3       	in	r18, 0x14	; 20
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_voidSetPinDirection+0x62>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_voidSetPinDirection+0x5e>
 1da:	80 95       	com	r24
 1dc:	82 23       	and	r24, r18
 1de:	84 bb       	out	0x14, r24	; 20
 1e0:	08 95       	ret
 1e2:	21 b3       	in	r18, 0x11	; 17
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_voidSetPinDirection+0x7a>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_voidSetPinDirection+0x76>
 1f2:	80 95       	com	r24
 1f4:	82 23       	and	r24, r18
 1f6:	81 bb       	out	0x11, r24	; 17
 1f8:	08 95       	ret
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	89 f0       	breq	.+34     	; 0x220 <DIO_voidSetPinDirection+0xac>
 1fe:	28 f0       	brcs	.+10     	; 0x20a <DIO_voidSetPinDirection+0x96>
 200:	82 30       	cpi	r24, 0x02	; 2
 202:	c9 f0       	breq	.+50     	; 0x236 <DIO_voidSetPinDirection+0xc2>
 204:	83 30       	cpi	r24, 0x03	; 3
 206:	11 f1       	breq	.+68     	; 0x24c <DIO_voidSetPinDirection+0xd8>
 208:	08 95       	ret
 20a:	2a b3       	in	r18, 0x1a	; 26
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_voidSetPinDirection+0xa2>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_voidSetPinDirection+0x9e>
 21a:	82 2b       	or	r24, r18
 21c:	8a bb       	out	0x1a, r24	; 26
 21e:	08 95       	ret
 220:	27 b3       	in	r18, 0x17	; 23
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_voidSetPinDirection+0xb8>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_voidSetPinDirection+0xb4>
 230:	82 2b       	or	r24, r18
 232:	87 bb       	out	0x17, r24	; 23
 234:	08 95       	ret
 236:	24 b3       	in	r18, 0x14	; 20
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_voidSetPinDirection+0xce>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_voidSetPinDirection+0xca>
 246:	82 2b       	or	r24, r18
 248:	84 bb       	out	0x14, r24	; 20
 24a:	08 95       	ret
 24c:	21 b3       	in	r18, 0x11	; 17
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_voidSetPinDirection+0xe4>
 254:	88 0f       	add	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	6a 95       	dec	r22
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_voidSetPinDirection+0xe0>
 25c:	82 2b       	or	r24, r18
 25e:	81 bb       	out	0x11, r24	; 17
 260:	08 95       	ret

00000262 <DIO_voidSetPinValue>:
 262:	84 30       	cpi	r24, 0x04	; 4
 264:	08 f0       	brcs	.+2      	; 0x268 <DIO_voidSetPinValue+0x6>
 266:	73 c0       	rjmp	.+230    	; 0x34e <DIO_voidSetPinValue+0xec>
 268:	68 30       	cpi	r22, 0x08	; 8
 26a:	08 f0       	brcs	.+2      	; 0x26e <DIO_voidSetPinValue+0xc>
 26c:	70 c0       	rjmp	.+224    	; 0x34e <DIO_voidSetPinValue+0xec>
 26e:	44 23       	and	r20, r20
 270:	19 f0       	breq	.+6      	; 0x278 <DIO_voidSetPinValue+0x16>
 272:	41 30       	cpi	r20, 0x01	; 1
 274:	c9 f1       	breq	.+114    	; 0x2e8 <DIO_voidSetPinValue+0x86>
 276:	08 95       	ret
 278:	81 30       	cpi	r24, 0x01	; 1
 27a:	91 f0       	breq	.+36     	; 0x2a0 <DIO_voidSetPinValue+0x3e>
 27c:	28 f0       	brcs	.+10     	; 0x288 <DIO_voidSetPinValue+0x26>
 27e:	82 30       	cpi	r24, 0x02	; 2
 280:	d9 f0       	breq	.+54     	; 0x2b8 <DIO_voidSetPinValue+0x56>
 282:	83 30       	cpi	r24, 0x03	; 3
 284:	29 f1       	breq	.+74     	; 0x2d0 <DIO_voidSetPinValue+0x6e>
 286:	08 95       	ret
 288:	2b b3       	in	r18, 0x1b	; 27
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_voidSetPinValue+0x32>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	6a 95       	dec	r22
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_voidSetPinValue+0x2e>
 298:	80 95       	com	r24
 29a:	82 23       	and	r24, r18
 29c:	8b bb       	out	0x1b, r24	; 27
 29e:	08 95       	ret
 2a0:	28 b3       	in	r18, 0x18	; 24
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <DIO_voidSetPinValue+0x4a>
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	6a 95       	dec	r22
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <DIO_voidSetPinValue+0x46>
 2b0:	80 95       	com	r24
 2b2:	82 23       	and	r24, r18
 2b4:	88 bb       	out	0x18, r24	; 24
 2b6:	08 95       	ret
 2b8:	25 b3       	in	r18, 0x15	; 21
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_voidSetPinValue+0x62>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	6a 95       	dec	r22
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_voidSetPinValue+0x5e>
 2c8:	80 95       	com	r24
 2ca:	82 23       	and	r24, r18
 2cc:	85 bb       	out	0x15, r24	; 21
 2ce:	08 95       	ret
 2d0:	22 b3       	in	r18, 0x12	; 18
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <DIO_voidSetPinValue+0x7a>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	6a 95       	dec	r22
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <DIO_voidSetPinValue+0x76>
 2e0:	80 95       	com	r24
 2e2:	82 23       	and	r24, r18
 2e4:	82 bb       	out	0x12, r24	; 18
 2e6:	08 95       	ret
 2e8:	81 30       	cpi	r24, 0x01	; 1
 2ea:	89 f0       	breq	.+34     	; 0x30e <DIO_voidSetPinValue+0xac>
 2ec:	28 f0       	brcs	.+10     	; 0x2f8 <DIO_voidSetPinValue+0x96>
 2ee:	82 30       	cpi	r24, 0x02	; 2
 2f0:	c9 f0       	breq	.+50     	; 0x324 <DIO_voidSetPinValue+0xc2>
 2f2:	83 30       	cpi	r24, 0x03	; 3
 2f4:	11 f1       	breq	.+68     	; 0x33a <DIO_voidSetPinValue+0xd8>
 2f6:	08 95       	ret
 2f8:	2b b3       	in	r18, 0x1b	; 27
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <DIO_voidSetPinValue+0xa2>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	6a 95       	dec	r22
 306:	e2 f7       	brpl	.-8      	; 0x300 <DIO_voidSetPinValue+0x9e>
 308:	82 2b       	or	r24, r18
 30a:	8b bb       	out	0x1b, r24	; 27
 30c:	08 95       	ret
 30e:	28 b3       	in	r18, 0x18	; 24
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_voidSetPinValue+0xb8>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	6a 95       	dec	r22
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_voidSetPinValue+0xb4>
 31e:	82 2b       	or	r24, r18
 320:	88 bb       	out	0x18, r24	; 24
 322:	08 95       	ret
 324:	25 b3       	in	r18, 0x15	; 21
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 c0       	rjmp	.+4      	; 0x330 <DIO_voidSetPinValue+0xce>
 32c:	88 0f       	add	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	6a 95       	dec	r22
 332:	e2 f7       	brpl	.-8      	; 0x32c <DIO_voidSetPinValue+0xca>
 334:	82 2b       	or	r24, r18
 336:	85 bb       	out	0x15, r24	; 21
 338:	08 95       	ret
 33a:	22 b3       	in	r18, 0x12	; 18
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	02 c0       	rjmp	.+4      	; 0x346 <DIO_voidSetPinValue+0xe4>
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	6a 95       	dec	r22
 348:	e2 f7       	brpl	.-8      	; 0x342 <DIO_voidSetPinValue+0xe0>
 34a:	82 2b       	or	r24, r18
 34c:	82 bb       	out	0x12, r24	; 18
 34e:	08 95       	ret

00000350 <DIO_voidSetPortValue>:
 350:	84 30       	cpi	r24, 0x04	; 4
 352:	78 f4       	brcc	.+30     	; 0x372 <DIO_voidSetPortValue+0x22>
 354:	81 30       	cpi	r24, 0x01	; 1
 356:	41 f0       	breq	.+16     	; 0x368 <DIO_voidSetPortValue+0x18>
 358:	28 f0       	brcs	.+10     	; 0x364 <DIO_voidSetPortValue+0x14>
 35a:	82 30       	cpi	r24, 0x02	; 2
 35c:	39 f0       	breq	.+14     	; 0x36c <DIO_voidSetPortValue+0x1c>
 35e:	83 30       	cpi	r24, 0x03	; 3
 360:	39 f0       	breq	.+14     	; 0x370 <DIO_voidSetPortValue+0x20>
 362:	08 95       	ret
 364:	6b bb       	out	0x1b, r22	; 27
 366:	08 95       	ret
 368:	68 bb       	out	0x18, r22	; 24
 36a:	08 95       	ret
 36c:	65 bb       	out	0x15, r22	; 21
 36e:	08 95       	ret
 370:	62 bb       	out	0x12, r22	; 18
 372:	08 95       	ret

00000374 <DIO_u8GetPinValue>:
 374:	84 30       	cpi	r24, 0x04	; 4
 376:	a8 f5       	brcc	.+106    	; 0x3e2 <DIO_u8GetPinValue+0x6e>
 378:	68 30       	cpi	r22, 0x08	; 8
 37a:	98 f5       	brcc	.+102    	; 0x3e2 <DIO_u8GetPinValue+0x6e>
 37c:	81 30       	cpi	r24, 0x01	; 1
 37e:	89 f0       	breq	.+34     	; 0x3a2 <DIO_u8GetPinValue+0x2e>
 380:	28 f0       	brcs	.+10     	; 0x38c <DIO_u8GetPinValue+0x18>
 382:	82 30       	cpi	r24, 0x02	; 2
 384:	c9 f0       	breq	.+50     	; 0x3b8 <DIO_u8GetPinValue+0x44>
 386:	83 30       	cpi	r24, 0x03	; 3
 388:	11 f1       	breq	.+68     	; 0x3ce <DIO_u8GetPinValue+0x5a>
 38a:	2b c0       	rjmp	.+86     	; 0x3e2 <DIO_u8GetPinValue+0x6e>
 38c:	29 b3       	in	r18, 0x19	; 25
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_u8GetPinValue+0x24>
 394:	88 0f       	add	r24, r24
 396:	99 1f       	adc	r25, r25
 398:	6a 95       	dec	r22
 39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_u8GetPinValue+0x20>
 39c:	92 2f       	mov	r25, r18
 39e:	98 23       	and	r25, r24
 3a0:	20 c0       	rjmp	.+64     	; 0x3e2 <DIO_u8GetPinValue+0x6e>
 3a2:	26 b3       	in	r18, 0x16	; 22
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_u8GetPinValue+0x3a>
 3aa:	88 0f       	add	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	6a 95       	dec	r22
 3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_u8GetPinValue+0x36>
 3b2:	92 2f       	mov	r25, r18
 3b4:	98 23       	and	r25, r24
 3b6:	15 c0       	rjmp	.+42     	; 0x3e2 <DIO_u8GetPinValue+0x6e>
 3b8:	23 b3       	in	r18, 0x13	; 19
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_u8GetPinValue+0x50>
 3c0:	88 0f       	add	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	6a 95       	dec	r22
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_u8GetPinValue+0x4c>
 3c8:	92 2f       	mov	r25, r18
 3ca:	98 23       	and	r25, r24
 3cc:	0a c0       	rjmp	.+20     	; 0x3e2 <DIO_u8GetPinValue+0x6e>
 3ce:	20 b3       	in	r18, 0x10	; 16
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <DIO_u8GetPinValue+0x66>
 3d6:	88 0f       	add	r24, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	6a 95       	dec	r22
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <DIO_u8GetPinValue+0x62>
 3de:	92 2f       	mov	r25, r18
 3e0:	98 23       	and	r25, r24
 3e2:	89 2f       	mov	r24, r25
 3e4:	08 95       	ret

000003e6 <DIO_voidConfig_Pull_Up_Pin>:
/* Fun. Return : void                                                                              */
/***************************************************************************************************/
void DIO_voidConfig_Pull_Up_Pin (u8 Copy_u8PortNumber, u8 Copy_u8PinNumber , u8 Copy_u8PullUpStatus )
{
    /* i/p validation */
    if ( Copy_u8PortNumber > PORTD || Copy_u8PinNumber > PIN7 )
 3e6:	84 30       	cpi	r24, 0x04	; 4
 3e8:	60 f4       	brcc	.+24     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3ea:	68 30       	cpi	r22, 0x08	; 8
 3ec:	50 f4       	brcc	.+20     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
    {
        // Do Nothing
    }
    else
    {
       switch(Copy_u8PullUpStatus)
 3ee:	44 23       	and	r20, r20
 3f0:	29 f0       	breq	.+10     	; 0x3fc <DIO_voidConfig_Pull_Up_Pin+0x16>
 3f2:	41 30       	cpi	r20, 0x01	; 1
 3f4:	31 f4       	brne	.+12     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
       {
            case ON  :   DIO_voidSetPinValue (Copy_u8PortNumber,Copy_u8PinNumber, HIGH );   break;
 3f6:	0e 94 31 01 	call	0x262	; 0x262 <DIO_voidSetPinValue>
 3fa:	08 95       	ret
            case OFF :   DIO_voidSetPinValue (Copy_u8PortNumber,Copy_u8PinNumber, LOW  );   break; 
 3fc:	40 e0       	ldi	r20, 0x00	; 0
 3fe:	0e 94 31 01 	call	0x262	; 0x262 <DIO_voidSetPinValue>
 402:	08 95       	ret

00000404 <_exit>:
 404:	f8 94       	cli

00000406 <__stop_program>:
 406:	ff cf       	rjmp	.-2      	; 0x406 <__stop_program>
