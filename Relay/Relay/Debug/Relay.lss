
Relay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000033e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000392  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000392  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00000400  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f10  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007cb  00000000  00000000  00001418  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000883  00000000  00000000  00001be3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b8  00000000  00000000  00002468  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b1  00000000  00000000  00002620  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a38  00000000  00000000  00002bd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00003609  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 9d 01 	jmp	0x33a	; 0x33a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "../HAL/BUTTON/button_Interface.h"
#include "../HAL/RELAY/Relay_Interface.h"

int main(void)
{
	RELAY_voidInit_relay_Pin(PORTD,PIN2);
  6c:	62 e0       	ldi	r22, 0x02	; 2
  6e:	83 e0       	ldi	r24, 0x03	; 3
  70:	0e 94 5f 00 	call	0xbe	; 0xbe <RELAY_voidInit_relay_Pin>
	BUTTON_voidInit_button_Pin(PORTD,PIN7);
  74:	67 e0       	ldi	r22, 0x07	; 7
  76:	83 e0       	ldi	r24, 0x03	; 3
  78:	0e 94 50 00 	call	0xa0	; 0xa0 <BUTTON_voidInit_button_Pin>
	
	u8 button_val ;
    
    while (1) 
    {
		button_val = BUTTON_u8Get_button_Pin(PORTD,PIN7);
  7c:	67 e0       	ldi	r22, 0x07	; 7
  7e:	83 e0       	ldi	r24, 0x03	; 3
  80:	0e 94 58 00 	call	0xb0	; 0xb0 <BUTTON_u8Get_button_Pin>
		
		if (button_val == 0)
  84:	81 11       	cpse	r24, r1
  86:	06 c0       	rjmp	.+12     	; 0x94 <main+0x28>
		{
			RELAY_voidStatus_relay_Pin(PORTD,PIN2,ON);
  88:	41 e0       	ldi	r20, 0x01	; 1
  8a:	62 e0       	ldi	r22, 0x02	; 2
  8c:	83 e0       	ldi	r24, 0x03	; 3
  8e:	0e 94 67 00 	call	0xce	; 0xce <RELAY_voidStatus_relay_Pin>
  92:	f4 cf       	rjmp	.-24     	; 0x7c <main+0x10>
		}
		else{
			RELAY_voidStatus_relay_Pin(PORTD,PIN2,OFF);
  94:	40 e0       	ldi	r20, 0x00	; 0
  96:	62 e0       	ldi	r22, 0x02	; 2
  98:	83 e0       	ldi	r24, 0x03	; 3
  9a:	0e 94 67 00 	call	0xce	; 0xce <RELAY_voidStatus_relay_Pin>
  9e:	ee cf       	rjmp	.-36     	; 0x7c <main+0x10>

000000a0 <BUTTON_voidInit_button_Pin>:
	{
		// Do Nothing
	}
	else
	{
		DIO_voidSetPortDirection ( Copy_u8PortNumber, INPUT );
  a0:	84 30       	cpi	r24, 0x04	; 4
  a2:	28 f4       	brcc	.+10     	; 0xae <BUTTON_voidInit_button_Pin+0xe>
  a4:	68 30       	cpi	r22, 0x08	; 8
  a6:	18 f4       	brcc	.+6      	; 0xae <BUTTON_voidInit_button_Pin+0xe>
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	0e 94 76 00 	call	0xec	; 0xec <DIO_voidSetPinDirection>
  ae:	08 95       	ret

000000b0 <BUTTON_u8Get_button_Pin>:
{
	// local Variable
	 u8 Local_u8Variable;
	
	/* i/p validation */
	if ( Copy_u8PortNumber > PORTD  || Copy_u8PinNumber > PIN7 )
  b0:	84 30       	cpi	r24, 0x04	; 4
  b2:	20 f4       	brcc	.+8      	; 0xbc <BUTTON_u8Get_button_Pin+0xc>
  b4:	68 30       	cpi	r22, 0x08	; 8
  b6:	10 f4       	brcc	.+4      	; 0xbc <BUTTON_u8Get_button_Pin+0xc>
	{
		// Do Nothing
	}
	else
	{
		Local_u8Variable = DIO_u8GetPinValue(Copy_u8PortNumber,Copy_u8PinNumber);
  b8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <DIO_u8GetPinValue>
	}
}
  bc:	08 95       	ret

000000be <RELAY_voidInit_relay_Pin>:


void RELAY_voidInit_relay_Pin( u8 Copy_u8PortNumber, u8 Copy_u8PinNumber )
{
	/* i/p validation */
	if ( Copy_u8PortNumber > PORTD  || Copy_u8PinNumber > PIN7 )
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	28 f4       	brcc	.+10     	; 0xcc <RELAY_voidInit_relay_Pin+0xe>
  c2:	68 30       	cpi	r22, 0x08	; 8
  c4:	18 f4       	brcc	.+6      	; 0xcc <RELAY_voidInit_relay_Pin+0xe>
	{
		// Do Nothing
	}
	else
	{
		DIO_voidSetPinDirection (Copy_u8PortNumber,Copy_u8PinNumber,OUTPUT);
  c6:	41 e0       	ldi	r20, 0x01	; 1
  c8:	0e 94 76 00 	call	0xec	; 0xec <DIO_voidSetPinDirection>
  cc:	08 95       	ret

000000ce <RELAY_voidStatus_relay_Pin>:
}

void RELAY_voidStatus_relay_Pin ( u8 Copy_u8PortNumber, u8 Copy_u8PinNumber, u8 Copy_u8Status )
{
	/* i/p validation */
	if ( Copy_u8PortNumber > PORTD  || Copy_u8PinNumber > PIN7 )
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	60 f4       	brcc	.+24     	; 0xea <RELAY_voidStatus_relay_Pin+0x1c>
  d2:	68 30       	cpi	r22, 0x08	; 8
  d4:	50 f4       	brcc	.+20     	; 0xea <RELAY_voidStatus_relay_Pin+0x1c>
	{
		// Do Nothing
	}
	else
	{
		switch(Copy_u8Status)
  d6:	44 23       	and	r20, r20
  d8:	29 f0       	breq	.+10     	; 0xe4 <RELAY_voidStatus_relay_Pin+0x16>
  da:	41 30       	cpi	r20, 0x01	; 1
  dc:	31 f4       	brne	.+12     	; 0xea <RELAY_voidStatus_relay_Pin+0x1c>
		{
			case ON  :   DIO_voidSetPinValue ( Copy_u8PortNumber, Copy_u8PinNumber, HIGH );     break;
  de:	0e 94 ed 00 	call	0x1da	; 0x1da <DIO_voidSetPinValue>
  e2:	08 95       	ret
			case OFF :   DIO_voidSetPinValue ( Copy_u8PortNumber, Copy_u8PinNumber, LOW  );     break;
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	0e 94 ed 00 	call	0x1da	; 0x1da <DIO_voidSetPinValue>
  ea:	08 95       	ret

000000ec <DIO_voidSetPinDirection>:
                        break;
    
            case PORTC: PORTC_REG = Copy_u8Value;
                        break;
    
            case PORTD: PORTD_REG = Copy_u8Value;
  ec:	84 30       	cpi	r24, 0x04	; 4
  ee:	08 f0       	brcs	.+2      	; 0xf2 <DIO_voidSetPinDirection+0x6>
  f0:	73 c0       	rjmp	.+230    	; 0x1d8 <DIO_voidSetPinDirection+0xec>
  f2:	68 30       	cpi	r22, 0x08	; 8
  f4:	08 f0       	brcs	.+2      	; 0xf8 <DIO_voidSetPinDirection+0xc>
  f6:	70 c0       	rjmp	.+224    	; 0x1d8 <DIO_voidSetPinDirection+0xec>
  f8:	44 23       	and	r20, r20
  fa:	19 f0       	breq	.+6      	; 0x102 <DIO_voidSetPinDirection+0x16>
  fc:	41 30       	cpi	r20, 0x01	; 1
  fe:	c9 f1       	breq	.+114    	; 0x172 <DIO_voidSetPinDirection+0x86>
 100:	08 95       	ret
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	91 f0       	breq	.+36     	; 0x12a <DIO_voidSetPinDirection+0x3e>
 106:	28 f0       	brcs	.+10     	; 0x112 <DIO_voidSetPinDirection+0x26>
 108:	82 30       	cpi	r24, 0x02	; 2
 10a:	d9 f0       	breq	.+54     	; 0x142 <DIO_voidSetPinDirection+0x56>
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	29 f1       	breq	.+74     	; 0x15a <DIO_voidSetPinDirection+0x6e>
 110:	08 95       	ret
 112:	2a b3       	in	r18, 0x1a	; 26
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_voidSetPinDirection+0x32>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_voidSetPinDirection+0x2e>
 122:	80 95       	com	r24
 124:	82 23       	and	r24, r18
 126:	8a bb       	out	0x1a, r24	; 26
 128:	08 95       	ret
 12a:	27 b3       	in	r18, 0x17	; 23
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_voidSetPinDirection+0x4a>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_voidSetPinDirection+0x46>
 13a:	80 95       	com	r24
 13c:	82 23       	and	r24, r18
 13e:	87 bb       	out	0x17, r24	; 23
 140:	08 95       	ret
 142:	24 b3       	in	r18, 0x14	; 20
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_voidSetPinDirection+0x62>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	6a 95       	dec	r22
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_voidSetPinDirection+0x5e>
 152:	80 95       	com	r24
 154:	82 23       	and	r24, r18
 156:	84 bb       	out	0x14, r24	; 20
 158:	08 95       	ret
 15a:	21 b3       	in	r18, 0x11	; 17
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_voidSetPinDirection+0x7a>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	6a 95       	dec	r22
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_voidSetPinDirection+0x76>
 16a:	80 95       	com	r24
 16c:	82 23       	and	r24, r18
 16e:	81 bb       	out	0x11, r24	; 17
 170:	08 95       	ret
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	89 f0       	breq	.+34     	; 0x198 <DIO_voidSetPinDirection+0xac>
 176:	28 f0       	brcs	.+10     	; 0x182 <DIO_voidSetPinDirection+0x96>
 178:	82 30       	cpi	r24, 0x02	; 2
 17a:	c9 f0       	breq	.+50     	; 0x1ae <DIO_voidSetPinDirection+0xc2>
 17c:	83 30       	cpi	r24, 0x03	; 3
 17e:	11 f1       	breq	.+68     	; 0x1c4 <DIO_voidSetPinDirection+0xd8>
 180:	08 95       	ret
 182:	2a b3       	in	r18, 0x1a	; 26
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_voidSetPinDirection+0xa2>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	6a 95       	dec	r22
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_voidSetPinDirection+0x9e>
 192:	82 2b       	or	r24, r18
 194:	8a bb       	out	0x1a, r24	; 26
 196:	08 95       	ret
 198:	27 b3       	in	r18, 0x17	; 23
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_voidSetPinDirection+0xb8>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	6a 95       	dec	r22
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_voidSetPinDirection+0xb4>
 1a8:	82 2b       	or	r24, r18
 1aa:	87 bb       	out	0x17, r24	; 23
 1ac:	08 95       	ret
 1ae:	24 b3       	in	r18, 0x14	; 20
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_voidSetPinDirection+0xce>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_voidSetPinDirection+0xca>
 1be:	82 2b       	or	r24, r18
 1c0:	84 bb       	out	0x14, r24	; 20
 1c2:	08 95       	ret
 1c4:	21 b3       	in	r18, 0x11	; 17
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_voidSetPinDirection+0xe4>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_voidSetPinDirection+0xe0>
 1d4:	82 2b       	or	r24, r18
 1d6:	81 bb       	out	0x11, r24	; 17
 1d8:	08 95       	ret

000001da <DIO_voidSetPinValue>:
 1da:	84 30       	cpi	r24, 0x04	; 4
 1dc:	08 f0       	brcs	.+2      	; 0x1e0 <DIO_voidSetPinValue+0x6>
 1de:	73 c0       	rjmp	.+230    	; 0x2c6 <DIO_voidSetPinValue+0xec>
 1e0:	68 30       	cpi	r22, 0x08	; 8
 1e2:	08 f0       	brcs	.+2      	; 0x1e6 <DIO_voidSetPinValue+0xc>
 1e4:	70 c0       	rjmp	.+224    	; 0x2c6 <DIO_voidSetPinValue+0xec>
 1e6:	44 23       	and	r20, r20
 1e8:	19 f0       	breq	.+6      	; 0x1f0 <DIO_voidSetPinValue+0x16>
 1ea:	41 30       	cpi	r20, 0x01	; 1
 1ec:	c9 f1       	breq	.+114    	; 0x260 <DIO_voidSetPinValue+0x86>
 1ee:	08 95       	ret
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	91 f0       	breq	.+36     	; 0x218 <DIO_voidSetPinValue+0x3e>
 1f4:	28 f0       	brcs	.+10     	; 0x200 <DIO_voidSetPinValue+0x26>
 1f6:	82 30       	cpi	r24, 0x02	; 2
 1f8:	d9 f0       	breq	.+54     	; 0x230 <DIO_voidSetPinValue+0x56>
 1fa:	83 30       	cpi	r24, 0x03	; 3
 1fc:	29 f1       	breq	.+74     	; 0x248 <DIO_voidSetPinValue+0x6e>
 1fe:	08 95       	ret
 200:	2b b3       	in	r18, 0x1b	; 27
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_voidSetPinValue+0x32>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_voidSetPinValue+0x2e>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	8b bb       	out	0x1b, r24	; 27
 216:	08 95       	ret
 218:	28 b3       	in	r18, 0x18	; 24
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_voidSetPinValue+0x4a>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_voidSetPinValue+0x46>
 228:	80 95       	com	r24
 22a:	82 23       	and	r24, r18
 22c:	88 bb       	out	0x18, r24	; 24
 22e:	08 95       	ret
 230:	25 b3       	in	r18, 0x15	; 21
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_voidSetPinValue+0x62>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_voidSetPinValue+0x5e>
 240:	80 95       	com	r24
 242:	82 23       	and	r24, r18
 244:	85 bb       	out	0x15, r24	; 21
 246:	08 95       	ret
 248:	22 b3       	in	r18, 0x12	; 18
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_voidSetPinValue+0x7a>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_voidSetPinValue+0x76>
 258:	80 95       	com	r24
 25a:	82 23       	and	r24, r18
 25c:	82 bb       	out	0x12, r24	; 18
 25e:	08 95       	ret
 260:	81 30       	cpi	r24, 0x01	; 1
 262:	89 f0       	breq	.+34     	; 0x286 <DIO_voidSetPinValue+0xac>
 264:	28 f0       	brcs	.+10     	; 0x270 <DIO_voidSetPinValue+0x96>
 266:	82 30       	cpi	r24, 0x02	; 2
 268:	c9 f0       	breq	.+50     	; 0x29c <DIO_voidSetPinValue+0xc2>
 26a:	83 30       	cpi	r24, 0x03	; 3
 26c:	11 f1       	breq	.+68     	; 0x2b2 <DIO_voidSetPinValue+0xd8>
 26e:	08 95       	ret
 270:	2b b3       	in	r18, 0x1b	; 27
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_voidSetPinValue+0xa2>
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	6a 95       	dec	r22
 27e:	e2 f7       	brpl	.-8      	; 0x278 <DIO_voidSetPinValue+0x9e>
 280:	82 2b       	or	r24, r18
 282:	8b bb       	out	0x1b, r24	; 27
 284:	08 95       	ret
 286:	28 b3       	in	r18, 0x18	; 24
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_voidSetPinValue+0xb8>
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_voidSetPinValue+0xb4>
 296:	82 2b       	or	r24, r18
 298:	88 bb       	out	0x18, r24	; 24
 29a:	08 95       	ret
 29c:	25 b3       	in	r18, 0x15	; 21
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_voidSetPinValue+0xce>
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	6a 95       	dec	r22
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_voidSetPinValue+0xca>
 2ac:	82 2b       	or	r24, r18
 2ae:	85 bb       	out	0x15, r24	; 21
 2b0:	08 95       	ret
 2b2:	22 b3       	in	r18, 0x12	; 18
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_voidSetPinValue+0xe4>
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	6a 95       	dec	r22
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_voidSetPinValue+0xe0>
 2c2:	82 2b       	or	r24, r18
 2c4:	82 bb       	out	0x12, r24	; 18
 2c6:	08 95       	ret

000002c8 <DIO_u8GetPinValue>:
/****************************************************************************/
u8 DIO_u8GetPinValue (u8 Copy_u8PortNumber, u8 Copy_u8PinNumber )
{
    u8 Local_u8Variable;
    /* i/p validation */
    if ( Copy_u8PortNumber > PORTD || Copy_u8PinNumber > PIN7 )
 2c8:	84 30       	cpi	r24, 0x04	; 4
 2ca:	a8 f5       	brcc	.+106    	; 0x336 <DIO_u8GetPinValue+0x6e>
 2cc:	68 30       	cpi	r22, 0x08	; 8
 2ce:	98 f5       	brcc	.+102    	; 0x336 <DIO_u8GetPinValue+0x6e>
    {
        // Do Nothing
    }
    else
    {
        switch(Copy_u8PortNumber)
 2d0:	81 30       	cpi	r24, 0x01	; 1
 2d2:	89 f0       	breq	.+34     	; 0x2f6 <DIO_u8GetPinValue+0x2e>
 2d4:	28 f0       	brcs	.+10     	; 0x2e0 <DIO_u8GetPinValue+0x18>
 2d6:	82 30       	cpi	r24, 0x02	; 2
 2d8:	c9 f0       	breq	.+50     	; 0x30c <DIO_u8GetPinValue+0x44>
 2da:	83 30       	cpi	r24, 0x03	; 3
 2dc:	11 f1       	breq	.+68     	; 0x322 <DIO_u8GetPinValue+0x5a>
 2de:	2b c0       	rjmp	.+86     	; 0x336 <DIO_u8GetPinValue+0x6e>
        {
            case PORTA :    Local_u8Variable = GET_BIT( PINA_REG ,Copy_u8PinNumber );   break;   
 2e0:	29 b3       	in	r18, 0x19	; 25
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_u8GetPinValue+0x24>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	6a 95       	dec	r22
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_u8GetPinValue+0x20>
 2f0:	92 2f       	mov	r25, r18
 2f2:	98 23       	and	r25, r24
 2f4:	20 c0       	rjmp	.+64     	; 0x336 <DIO_u8GetPinValue+0x6e>
            case PORTB :    Local_u8Variable = GET_BIT( PINB_REG ,Copy_u8PinNumber );   break;
 2f6:	26 b3       	in	r18, 0x16	; 22
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_u8GetPinValue+0x3a>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_u8GetPinValue+0x36>
 306:	92 2f       	mov	r25, r18
 308:	98 23       	and	r25, r24
 30a:	15 c0       	rjmp	.+42     	; 0x336 <DIO_u8GetPinValue+0x6e>
            case PORTC :    Local_u8Variable = GET_BIT( PINC_REG ,Copy_u8PinNumber );   break;
 30c:	23 b3       	in	r18, 0x13	; 19
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 c0       	rjmp	.+4      	; 0x318 <DIO_u8GetPinValue+0x50>
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	6a 95       	dec	r22
 31a:	e2 f7       	brpl	.-8      	; 0x314 <DIO_u8GetPinValue+0x4c>
 31c:	92 2f       	mov	r25, r18
 31e:	98 23       	and	r25, r24
 320:	0a c0       	rjmp	.+20     	; 0x336 <DIO_u8GetPinValue+0x6e>
            case PORTD :    Local_u8Variable = GET_BIT( PIND_REG ,Copy_u8PinNumber );   break;
 322:	20 b3       	in	r18, 0x10	; 16
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_u8GetPinValue+0x66>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	6a 95       	dec	r22
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_u8GetPinValue+0x62>
 332:	92 2f       	mov	r25, r18
 334:	98 23       	and	r25, r24
            default :                                                                   break;
        }
    }
    return Local_u8Variable ;
}
 336:	89 2f       	mov	r24, r25
 338:	08 95       	ret

0000033a <_exit>:
 33a:	f8 94       	cli

0000033c <__stop_program>:
 33c:	ff cf       	rjmp	.-2      	; 0x33c <__stop_program>
